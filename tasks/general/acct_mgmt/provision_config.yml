---
# Set up directory and files for specifying software needs rather than using hosts file.

- name: General | Account Management | Provisioning Configuration | Variables 1
  set_fact:
    prov_dir: "{{ user_root.home }}/.provision_config"

- name: General | Account Management | Provisioning Configuration | Variables 2
  set_fact:
    gen_file: "{{ prov_dir }}/general.ini"
    gui_file: "{{ prov_dir }}/workstation.ini"
    srv_file: "{{ prov_dir }}/server.ini"
    mnr_file: "{{ prov_dir }}/miner.ini"

- name: General | Account Management | Provisioning Configuration | Create Directory
  file: 
    path: "{{ prov_dir }}"
    state: directory
    mode: '0755'
  when: user_root.home != ""


## General ##

- name: General | Account Management | Provisioning Configuration | General | Create
  blockinfile:
    path: "{{ gen_file }}"
    block: |
      ;;;;;;; Available options - all require lowercase values ;;;;;;
      ;
      ;     branch : Provide the Github branch that the machine should poll.
      ;                Example: main, dev
      ;
      ; pentesting : Set to true to install tools such as metasploit (nmap is already provided for reporting)
      ;                Example: true
      ;
      [global]
    marker: '; {mark} MANAGED BY ANSIBLE | Generic Config'
    state: present
    create: yes
    backup: yes
  when: user_root.home != ""

- name: General | Account Management | Provisioning Configuration | General | Load
  set_fact:
    branch:     "{{ lookup('ini', 'branch     file={{gen_file}} default=main') }}"
    pentesting: "{{ lookup('ini', 'pentesting file={{gen_file}} default=false') }}"
  when: branch is not defined and 
        pentesting is not defined

- name: General | Account Management | Provisioning Configuration | General | Print
  debug: 
    var: "{{ item }}"
  loop:
    - branch
    - pentesting


## Workstation ##

- name: General | Account Management | Provisioning Configuration | Workstation | Create
  blockinfile:
    path: "{{ gui_file }}"
    block: |
      ;;;;;;; Available options - all require lowercase values ;;;;;;
      ;
      ;  enable : Set to true for system to be considered a workstation.
      ;
      ;  coding : Set to true for installation of code editors (VSCode, PyCharm, Android Studio)
      ;
      ; editing : Set to true for installation of Audio/Video editors (Shotcut, Audacity, OBS Stdio, GIMP)
      ;
      ;  gaming : Set to true for installation of gaming software (Steam, Lutris)
      ;
      ;     rdp : Set to true for installation of RDP protocol
      ;             CURRENTLY FREEBSD-ONLY
      ;
      ;     vnc : Set to true for installation of VNC protocol
      ;             NOT IMPLEMENTED YET
      ;
      [global]
    marker: '; {mark} MANAGED BY ANSIBLE | Workstation Config'
    state: present
    create: yes
    backup: yes
  when: user_root.home != ""

- name: General | Account Management | Provisioning Configuration | Workstation | Load
  set_fact:
    workstation: "{{ lookup('ini', 'enable  file={{gui_file}} default=false') }}"
    coding:      "{{ lookup('ini', 'coding  file={{gui_file}} default=false') }}"
    editing:     "{{ lookup('ini', 'editing file={{gui_file}} default=false') }}"
    gaming:      "{{ lookup('ini', 'gaming  file={{gui_file}} default=false') }}"
    rdp:         "{{ lookup('ini', 'rdp     file={{gui_file}} default=false') }}"
    vnc:         "{{ lookup('ini', 'vnc     file={{gui_file}} default=false') }}"
  when: workstation is not defined and 
        coding is not defined and
        editing is not defined and
        gaming is not defined and
        rdp is not defined and
        vnc is not defined

- name: General | Account Management | Provisioning Configuration | Workstation | Print
  debug: 
    var: "{{ item }}"
  loop:
    - workstation
    - coding
    - editing
    - gaming
    - rdp
    - vnc

# TBD: Create Server

# TBD: Create Miner
